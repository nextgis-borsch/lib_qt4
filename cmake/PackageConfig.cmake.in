# - Config file for the @PACKAGE_UPPER_NAME@ package

set(@PACKAGE_UPPER_NAME@_VERSION "@VERSION@")

# Init variables
set(@PACKAGE_UPPER_NAME@_INCLUDE_DIRS)
set(@PACKAGE_UPPER_NAME@_LIBRARIES)

get_filename_component(QT_ROOT "${CMAKE_CURRENT_LIST_DIR}" PATH)

set(QT_QMAKE_EXECUTABLE ${QT_ROOT}/bin/qmake${CMAKE_EXECUTABLE_SUFFIX})

set(@PACKAGE_UPPER_NAME@_QMAKE_EXECUTABLE ${QT_QMAKE_EXECUTABLE})

set(QT_EXECUTABLES
    moc uic rcc lupdate lrelease lconvert qcollectiongenerator qmake
)

foreach(QT_EXE ${QT_EXECUTABLES})
    add_executable(Qt4::${QT_EXE} IMPORTED)
    set_property(TARGET Qt4::${QT_EXE} PROPERTY IMPORTED_LOCATION ${QT_ROOT}/bin/${QT_EXE}${CMAKE_EXECUTABLE_SUFFIX})
endforeach()

set(QT_MODULES
    QtGui Qt3Support QtSvg QtScript QtTest QtUiTools QtHelp QtWebKit
    QtXmlPatterns phonon QtNetwork QtMultimedia QtNsPlugin QtOpenGL
    QtSql QtXml QtDesigner QtDBus QtScriptTools QtDeclarative
)

foreach(QT_MODULE ${QT_MODULES})
    set(_MOD_PATH ${QT_ROOT}/lib/${QT_MODULE})
    if(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
        set(_MOD_PATH "${_MOD_PATH}.framework"
    endif()
    if(EXISTS _MOD_PATH)
        set(_INCLUDE_DIR)
        add_library(Qt4::${QT_MODULE} SHARED IMPORTED)
        if(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
            set_property(TARGET Qt4::${QT_MODULE} PROPERTY FRAMEWORK 1)
            set_target_properties(Qt4::${QT_MODULE} PROPERTIES
                INTERFACE_INCLUDE_DIRECTORIES "${_MOD_PATH}/Versions/4/Headers"
                IMPORTED_LOCATION_RELEASE "${_MOD_PATH}/Versions/4/${QT_MODULE}"
                IMPORTED_SONAME_RELEASE "@rpath/${QT_MODULE}.framework/Versions/4/${QT_MODULE}"
            )
            set(_INCLUDE_DIR "${_MOD_PATH}/Versions/4/Headers")
        else(
            set_target_properties(Qt4::${QT_MODULE} PROPERTIES
                INTERFACE_INCLUDE_DIRECTORIES "${QT_ROOT}/include"
                IMPORTED_IMPLIB_RELEASE "${_MOD_PATH}${CMAKE_STATIC_LIBRARY_SUFFIX}"
                IMPORTED_LOCATION_RELEASE "${QT_ROOT}/bin/${QT_MODULE}${CMAKE_SHARED_LIBRARY_SUFFIX}"
            )
            set(_INCLUDE_DIR "${QT_ROOT}/include")
        )
        endif()

        string(TOUPPER ${QT_MODULE} QT_MODULE_UPPER_NAME)
        set(QT_${QT_MODULE_UPPER_NAME}_LIBRARY Qt4::${QT_MODULE} )
        set(QT_${QT_MODULE_UPPER_NAME}_LIBRARIES Qt4::${QT_MODULE} )
        set(QT_${QT_MODULE_UPPER_NAME}_INCLUDE_DIRS ${_INCLUDE_DIR})
        set(QT_${QT_MODULE_UPPER_NAME}_FOUND TRUE)
        set(QT_USE_${QT_MODULE_UPPER_NAME} 1)

        set(@PACKAGE_UPPER_NAME@_INCLUDE_DIRS ${@PACKAGE_UPPER_NAME@_INCLUDE_DIRS} QT_${QT_MODULE_UPPER_NAME}_INCLUDE_DIRS)
        set(@PACKAGE_UPPER_NAME@_LIBRARIES ${@PACKAGE_UPPER_NAME@_LIBRARIES} QT_${QT_MODULE_UPPER_NAME}_LIBRARIES)
    endif()
endforeach()

set(_FOUND TRUE)
if(Qt4_FIND_COMPONENTS)
    foreach( component ${Qt4_FIND_COMPONENTS} )
        string(TOUPPER ${component} QT_MODULE_UPPER_NAME)
        if (NOT QT_${QT_MODULE_UPPER_NAME}_FOUND)
            if(NOT Qt4_FIND_QUIETLY)
                message(WARNING "Failed to find Qt4 component \"${component}\"")
            endif()
            set(_FOUND FALSE)
            break()
        endif()
    endforeach()
endif()

include("${CMAKE_ROOT}/Modules/Qt4Macros.cmake")

set(@PACKAGE_UPPER_NAME@_FOUND ${_FOUND})
